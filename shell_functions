lc() {
    local start=${1:-1}
    local end=${2:-"$start"}
    fc -ln -$start -$end | sed 's/^[[:space:]]*//'
}

yc() {
    lc $@ | xsel -bi
}

man() {
    title "man $@"
    /usr/bin/man "$@"
}

dbs() {
    grep -ri "$@" "$XDG_DATA_HOME/cds_collection/" | sed 's/.*\/\([^\.]\+\)\.txt:/\1 -- /'
}

bnd() {
    pattern=.
    [ $# -gt 0 ] && pattern=$@
    bind -P | sed 's/\\e\([^-]\)/M-\1/g' | sed 's/\\C\([^-]\)/C-\1/g' | sed 's/\\C-/C-/g' | sed 's/\\e-/M-/g' | grep -i "$pattern"
}

tgz() {
    local name=$1
    shift
    tar cvzf "${name}.tgz" "$@"
}

mil() {
    mediainfo --Info-Parameters
}

mi() {
    mediainfo "--Inform=General;%$@%"
}

msa() {
    ms "$@" | ma
}

g() {
    local pat=$1
    local dir=${2:-.}
    grep -r --color=auto "$pat" "$dir"
}

f() {
    local pat=$1
    local dir=${2:-.}
    find "$dir" -maxdepth 1 -iregex ".*${pat}.*" -printf '%p\0' | xargs -r0 ls --color=auto -1d
}

F() {
    find . -iregex ".*$@.*" -printf '%P\0' | xargs -r0 ls --color=auto -1d
}

Fd() {
    find . -type d -iregex ".*$@.*" -printf '%P\0' | xargs -r0 ls --color=auto -1d
}

Fl() {
    find . -type l -iregex ".*$@.*" -printf '%P\0' | xargs -r0 ls --color=auto -1d
}

Fe() {
    find . -type f -perm /u=x -iregex ".*$@.*" -printf '%P\0' | xargs -r0 ls --color=auto -1d
}

Ff() {
    find . -type f -iregex ".*$@.*" -printf '%P\0' | xargs -r0 ls --color=auto -1d
}

fxo() {
    find . -iname "*$@*" -printf "%P\n" -exec open "{}" \;
}

fxr() {
    find . -iname "*$@*" -printf "%P\n" -exec rm "{}" \;
}

L() {
    ls -- *."$@"
}

L1() {
    ls -1 -- *."$@"
}

S() {
    lS -- *."$@"
}

N() {
    n -- *."$@"
}

N1() {
    n -1 -- *."$@"
}

R() {
    while [ $# -gt 0 ] ; do
        rm -v -- *."$1"
        shift
    done
}

dud() {
    du -h -d 1 "$@" | sort -h
}

dua() {
    du -ha "$@" | sort -h
}

OO() {
    tail -n "$@" | xargs -I % open "%"
}

RR() {
    tail -n "$@" | xargs -I % rm -v "%"
}

rcd() {
    # find $PWD/ -maxdepth 1 -type d ! -samefile $PWD/ -exec urxvtc -cd "{}" \;
    find $PWD/ -maxdepth 1 -mindepth 1 -type d -exec urxvtc -cd "{}" \;
}

count() {
    l1 $@ | wc -l
}

weather_location() {
    wget -qO - "http://xoap.weather.com/search/search?where=$@" | grep 'loc id'
}

spell() {
    echo $@ | hunspell -d en_US | grep '^&'
}

frspell() {
    echo $@ | hunspell -d fr_FR | grep '^&'
}

pb() {
    wget -U Mozilla -qO - "http://thepiratebay.org/search/'$@'/0/7/0" | grep -o 'http\:\/\/torrents\.thepiratebay\.org\/.*\.torrent'
}

pbg() {
    pb "$@" | head -n 1 | xargs wget
}

ngfind() {
    grep -E $@ $XDG_DATA_HOME/newsgroups.txt
}

cplr() {
    local dest=$1
    shift
    cp  -Lr "$@" "$dest"/
}

cpmicro() {
    cplr "$MICRO" "$@"
}

cpdata() {
    cplr "$DATA" "$@"
}

cptraveler() {
    cplr "$TRAVELER" "$@"
}

cphexagon() {
    cplr "$HEXAGON" "$@"
}

cplacie() {
    cplr "$LACIE" "$@"
}

# mm() {
#     local output="$XDG_TMP_DIR/.mailcheck"
#     mpop -a | tee $output
#     local messages_count=$(grep -m 1 -Ech "^retrieving" $output)
#     [ "$messages_count" -gt 0 ] && m
# }

mkmaildir() {
    local maildir="$HOME/.maildir"
    mkdir -p $maildir/$@/{cur,new,tmp}
}

wiktionary() {
    curl -s "http://en.wiktionary.org/w/index.php?action=raw&title=$(echo $@ | sed 's/ /+/g')"
}

wiktionary_fr() {
    curl -s "http://fr.wiktionary.org/w/index.php?action=raw&title=$(echo $@ | sed 's/ /+/g')"
}

def() {
    wiktionary $@ | grep "^# " | perl -pe 's/\[\[(?:[^\|\]]+\|)*([^\]]+)\]\]/$1/g' | perl -pe 's/\{\{([^{|]+ of)\|([^|}]+)[^}]*\}\}/*\U$1\E* $2/g' | perl -pe 's/\{\{([^|}]+)[^}]*\}\}/\U*$1*\E/g' | sed -E 's/]]//'
}

def1() {
    def $@ | head -n 1
}

defr() {
    wiktionary_fr $@ | grep "^# " | perl -pe 's/\[\[(?:[^\|\]]+\|)*([^\]]+)\]\]/$1/g' | perl -pe 's/\{\{([^|}]+)[^}]*\}\}/\U*$1*\E/g' | sed -E 's/]]//'
}

defr1() {
    defr $@ | head -n 1
}

conj() {
    w3m "http://www.les-verbes.com/conjuguer.php?verbe=$@"
}

linux_changelog() {
    local uri="http://www.kernel.org/pub/linux/kernel/v${@%%.*}.0/ChangeLog-$@"
    wget -qO - "$uri" | grep -A 2 '^Date:' | grep ' \+[^:]\+: ' | sed 's/^ \+//'
}

#swc() {
 #compc -include-sources . -output $@.swc
#}

#airc() {
    #if [ -d lib ] ; then
        #amxmlc -library-path+=lib $@ 2>&1
    #else
        #amxmlc $@ 2>&1
    #fi
#}

#airr() {
 #airc $@ && adl ${@%.*}-app.xml
#}

#asr() {
 #asc $@ && web_browser ${@%.*}.swf
#}

#clinst() {
 #cp -r "$@" "$SBCL_SITE/$@"
#}

#clrefresh() {
 #find "$SBCL_SITE" -name "*.asd" | xargs -I % ln -sf "%" "$SBCL_SYSTEMS"
#}

#cllist() {
 #ls $@ "$SBCL_SYSTEMS"
#}

#clclean() {
 #rm $SBCL_SYSTEMS/*.asd
#}

#ecllink() {
 #find . -name \*.asd -exec ln -s {} . \;
#}

# vim: ft=sh
