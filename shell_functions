z() {
    local dir=$(Z "$@" | head -n 1)
    [ -z "$dir" ] && return 1
    cd "$dir" || Z -d "$dir"
}

zx() {
    Z -d "$PWD"; z "$@"
}

lc() {
    local start=${1:-1}
    local end=${2:-"$start"}
    fc -ln -$start -$end | sed 's/^[[:space:]]*//'
}

yc() {
    lc $@ | pbcopy
}

dehdr() {
    for s in *.c ; do
        CFLAGS="-Werror -Wfatal-errors" deheader "$@" -i "${s%.*}\.h" "$s" | sed -n 's/.*: *remove *\(.*\) *from *\(.*\)/\2: \1/p'
    done
}

dbs() {
    grep -ri "$@" "$XDG_DATA_HOME/cds_collection/" | sed 's/.*\/\([^\.]\+\)\.txt:/\1 -- /'
}

bnd() {
    pattern=.
    [ $# -gt 0 ] && pattern=$@
    bind -P | sed 's/\\e\([^-]\)/M-\1/g' | sed 's/\\C\([^-]\)/C-\1/g' | sed 's/\\C-/C-/g' | sed 's/\\e-/M-/g' | grep -i "$pattern"
}

mil() {
    mediainfo --Info-Parameters
}

mi() {
    mediainfo "--Inform=General;%$@%"
}

msa() {
    ms "$@" | ma
}

G() {
    local pat=$1
    local dir=${2:-.}
    [ $# -gt 1 ] && shift 2 || shift
    grep "$@" -r --color=auto "$pat" "$dir"
}

g() {
    local pat=$1
    local dir=${2:-.}
    [ $# -gt 1 ] && shift 2 || shift
    grep "$@" -r --color=auto "$pat" "$dir"
}

F() {
    local pat=$1
    local dir=${2:-.}
    [ $# -gt 1 ] && shift 2 || shift
    find -L "$dir" "$@" -iregex ".*${pat}.*" -print0 | xargs -0 ls --color=auto -1d
}

f() {
    local pat=$1
    shift
    F "$pat" . -maxdepth 1 "$@"
}

ox() {
    cmd=$1
    shift
    tmpout=$(mktemp)
    $cmd "$@" > "$tmpout"
    xargs -a "$tmpout" -d '\n' open
    rm "$tmpout"
}

of() {
    ox f "$@"
}

oF() {
    ox F "$@"
}

L() {
    ls -d -- *."$@"
}

S() {
    lS -d -- *."$@"
}

N() {
    n -d -- *."$@"
}

R() {
    while [ $# -gt 0 ] ; do
        rm -v -- *."$1"
        shift
    done
}

dud() {
    du -h -d 1 "$@" | sort -h
}

dua() {
    du -ha "$@" | sort -h
}

OO() {
    tail -n "$@" | xargs -d '\n' open
}

RR() {
    tail -n "$@" | xargs -d '\n' -I % rm -v "%"
}

count() {
    l1 $@ | wc -l
}

weather_loc() {
    wget -qO - "http://xoap.weather.com/search/search?where=$@" | grep 'loc id'
}

spell() {
    echo $@ | hunspell -d en_US | grep '^&'
}

frspell() {
    echo $@ | hunspell -d fr_FR | grep '^&'
}

cplr() {
    local label=$1
    shift
    cp  -Lr "$@" /Volumes/"$label"/
}

mkmaildir() {
    local maildir="$HOME/.maildir"
    mkdir -p $maildir/$@/{cur,new,tmp}
}

wiktionary() {
    curl -s "http://en.wiktionary.org/w/index.php?action=raw&title=$(echo $@ | sed 's/ /+/g')"
}

wiktionary_fr() {
    curl -s "http://fr.wiktionary.org/w/index.php?action=raw&title=$(echo $@ | sed 's/ /+/g')"
}

def() {
    wiktionary $@ | grep "^# " | perl -pe 's/\[\[(?:[^\|\]]+\|)*([^\]]+)\]\]/$1/g' | perl -pe 's/\{\{([^{|]+ of)\|([^|}]+)[^}]*\}\}/*\U$1\E* $2/g' | perl -pe 's/\{\{([^|}]+)[^}]*\}\}/\U*$1*\E/g' | sed -E 's/]]//'
}

defr() {
    wiktionary_fr $@ | grep "^# " | perl -pe 's/\[\[(?:[^\|\]]+\|)*([^\]]+)\]\]/$1/g' | perl -pe 's/\{\{([^|}]+)[^}]*\}\}/\U*$1*\E/g' | sed -E 's/]]//'
}

defr1() {
    defr $@ | head -n 1
}

conj() {
    w3m "http://www.les-verbes.com/conjuguer.php?verbe=$@"
}

#swc() {
 #compc -include-sources . -output $@.swc
#}

#airc() {
    #if [ -d lib ] ; then
        #amxmlc -library-path+=lib $@ 2>&1
    #else
        #amxmlc $@ 2>&1
    #fi
#}

#airr() {
 #airc $@ && adl ${@%.*}-app.xml
#}

#asr() {
 #asc $@ && web_browser ${@%.*}.swf
#}

#clinst() {
 #cp -r "$@" "$SBCL_SITE/$@"
#}

#clrefresh() {
 #find "$SBCL_SITE" -name "*.asd" | xargs -I % ln -sf "%" "$SBCL_SYSTEMS"
#}

#cllist() {
 #ls $@ "$SBCL_SYSTEMS"
#}

#clclean() {
 #rm $SBCL_SYSTEMS/*.asd
#}

#ecllink() {
 #find . -name \*.asd -exec ln -s {} . \;
#}

# vim: ft=sh
