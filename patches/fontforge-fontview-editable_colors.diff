>From 835ca7c518332b8ec968e4eec14c3082453a4a26 Mon Sep 17 00:00:00 2001
From: Severin Meyer <sev.ch@web.de>
Date: Tue, 24 Apr 2012 14:00:23 +0200
Subject: [PATCH] fontview: Editable colors

Add X resources for commonly used colors:
FontView.GlyphInfoColor
FontView.HintingNeededColor
FontView.EmptySlotFgColor

---
 fontforge/fontview.c |   27 ++++++++++++++++-----------
 1 files changed, 16 insertions(+), 11 deletions(-)

diff --git a/fontforge/fontview.c b/fontforge/fontview.c
index 1e2260b..043adf6 100644
--- a/fontforge/fontview.c
+++ b/fontforge/fontview.c
@@ -91,7 +91,10 @@ extern int _GScrollBar_Width;
 static int fv_fontsize = 11, fv_fs_init=0;
 static Color fvselcol = 0xffff00, fvselfgcol=0x000000;
 Color view_bgcol;
+static Color fvglyphinfocol = 0xff0000;
+static Color fvemtpyslotfgcol = 0xd08080;
 static Color fvchangedcol = 0x000060;
+static Color fvhintingneededcol = 0x0000ff;
 
 enum glyphlable { gl_glyph, gl_name, gl_unicode, gl_encoding };
 int default_fv_showhmetrics=false, default_fv_showvmetrics=false,
@@ -153,13 +156,12 @@ return;
  /*  lines */
 	    if ( i>=0 && i<=fv->rowcnt ) {
 		GRect r;
-		Color hintcol = 0x0000ff;
 		r.x = j*fv->cbw+1; r.width = fv->cbw-1;
 		r.y = i*fv->cbh+1; r.height = fv->lab_height-1;
-		GDrawDrawLine(fv->v,r.x,r.y,r.x,r.y+r.height-1,hintcol);
-		GDrawDrawLine(fv->v,r.x+1,r.y,r.x+1,r.y+r.height-1,hintcol);
-		GDrawDrawLine(fv->v,r.x+r.width-1,r.y,r.x+r.width-1,r.y+r.height-1,hintcol);
-		GDrawDrawLine(fv->v,r.x+r.width-2,r.y,r.x+r.width-2,r.y+r.height-1,hintcol);
+		GDrawDrawLine(fv->v,r.x,r.y,r.x,r.y+r.height-1,fvhintingneededcol);
+		GDrawDrawLine(fv->v,r.x+1,r.y,r.x+1,r.y+r.height-1,fvhintingneededcol);
+		GDrawDrawLine(fv->v,r.x+r.width-1,r.y,r.x+r.width-1,r.y+r.height-1,fvhintingneededcol);
+		GDrawDrawLine(fv->v,r.x+r.width-2,r.y,r.x+r.width-2,r.y+r.height-1,fvhintingneededcol);
 	    }
 	}
     }
@@ -220,8 +222,8 @@ static void FVDrawGlyph(GWindow pixmap, FontView *fv, int index, int forcebg ) {
     if ( !SCWorthOutputting(sc) ) {
 	int x = j*fv->cbw+1, xend = x+fv->cbw-2;
 	int y = i*fv->cbh+fv->lab_height+1, yend = y+fv->cbw-1;
-	GDrawDrawLine(pixmap,x,y,xend,yend,0xd08080);
-	GDrawDrawLine(pixmap,x,yend,xend,y,0xd08080);
+	GDrawDrawLine(pixmap,x,y,xend,yend,fvemtpyslotfgcol);
+	GDrawDrawLine(pixmap,x,yend,xend,y,fvemtpyslotfgcol);
     }
     if ( sc!=NULL ) {
 	BDFChar *bdfc;
@@ -6161,7 +6163,7 @@ static void FVExpose(FontView *fv,GWindow pixmap,GEvent *event) {
 		     ( fv->b.sf->layers[fv->b.active_layer].order2 && sc->layers[fv->b.active_layer].splines!=NULL &&
 			sc->ttf_instrs_len<=0 ) ||
 		     ( fv->b.sf->layers[fv->b.active_layer].order2 && sc->instructions_out_of_date ) ) {
-		Color hintcol = 0x0000ff;
+		Color hintcol = fvhintingneededcol;
 		if ( fv->b.sf->layers[fv->b.active_layer].order2 && sc->instructions_out_of_date && sc->ttf_instrs_len>0 )
 		    hintcol = 0xff0000;
 		GDrawDrawLine(pixmap,r.x,r.y,r.x,r.y+r.height-1,hintcol);
@@ -6249,7 +6251,7 @@ void FVDrawInfo(FontView *fv,GWindow pixmap,GEvent *event) {
     EncMap *map = fv->b.map;
     int gid;
     int uni;
-    Color fg = 0xff0000;
+    Color fg = fvglyphinfocol;
     int ulen, tlen;
 
     if ( event->u.expose.rect.y+event->u.expose.rect.height<=fv->mbh )
@@ -6325,7 +6327,7 @@ return;
 	uc_strncat(ubuffer, UnicodeRange(uni),80);
     }
 
-    tlen = GDrawDrawBiText(pixmap,10,fv->mbh+fv->lab_as,ubuffer,ulen,NULL,0xff0000);
+    tlen = GDrawDrawBiText(pixmap,10,fv->mbh+fv->lab_as,ubuffer,ulen,NULL,fvglyphinfocol);
     GDrawDrawBiText(pixmap,10+tlen,fv->mbh+fv->lab_as,ubuffer+ulen,-1,NULL,fg);
     GDrawPopClip(pixmap,&old);
 }
@@ -7257,10 +7259,13 @@ return;
 }
 
 static struct resed fontview_re[] = {
+    {N_("Glyph Info Color"), "GlyphInfoColor", rt_color, &fvglyphinfocol, N_("Color of the font used to display glyph information in the fontview")},
+    {N_("Empty Slot FG Color"), "EmptySlotFgColor", rt_color, &fvemtpyslotfgcol, N_("Color used to draw the foreground of empty slots")},
     {N_("Selected BG Color"), "SelectedColor", rt_color, &fvselcol, N_("Color used to draw the background of selected glyphs")},
     {N_("Selected FG Color"), "SelectedFgColor", rt_color, &fvselfgcol, N_("Color used to draw the foreground of selected glyphs")},
     {N_("Changed Color"), "ChangedColor", rt_color, &fvchangedcol, N_("Color used to mark a changed glyph")},
-    {N_("Font Size"), "FontSize", rt_int, &fv_fontsize, N_("Size (in points) of the font used to display information and glyph labels in the fontview.")},
+    {N_("Hinting Needed Color"), "HintingNeededColor", rt_color, &fvhintingneededcol, N_("Color used to mark glyphs that need hinting")},
+    {N_("Font Size"), "FontSize", rt_int, &fv_fontsize, N_("Size (in points) of the font used to display information and glyph labels in the fontview")},
     {N_("Font Family"), "FontFamily", rt_stringlong, &standard_fontnames, N_("A comma separated list of font family names used to display small example images of glyphs over the user designed glyphs")},
     {N_("Serif Family"), "SerifFamily", rt_stringlong, &special_fontnames[0], N_("A comma separated list of font family names used to display small example images of glyphs over the user designed glyphs\nfor characters in the unicode math region which are specified to be in a serif font")},
     {N_("Script Family"), "ScriptFamily", rt_stringlong, &special_fontnames[1], N_("A comma separated list of font family names used to display small example images of glyphs over the user designed glyphs\nfor characters in the unicode math region which are specified to be in a script font")},
-- 
1.7.7

